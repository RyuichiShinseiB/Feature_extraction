[tool.poetry]
name = "feat-extrc"
version = "0.1.0"
description = "Feature extraction from CNTs forest cross sectional image"
authors = ["Ryuichi Shinsei <275051h@gs.kochi-tech.ac.jp>"]
license = "MIT"
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.25.0"
jupyter = "^1.0.0"
matplotlib = "^3.9.3"
polars = "^0.18.3"
scikit-learn = "^1.2.2"
hydra-core = "^1.3.2"
torchinfo = "^1.8.0"
torch = {version = "^2.0.1+cu118", source = "torch_cu118"}
torchvision = {version = "^0.15.2+cu118", source = "torch_cu118"}
pandas = "^2.0.3"
tqdm = "^4.65.0"
einops = "^0.6.1"
seaborn = "^0.12.2"
pyarrow = "^12.0.1"
opencv-python = "^4.8.0.74"
optuna = "^3.4.0"
umap-learn = "^0.5.4"
omegaconf = "^2.3.0"
onnx = "^1.15.0"
tensorboard = "^2.18.0"
torch-tb-profiler = "^0.4.3"
torcheval = "^0.0.7"
japanize-matplotlib = "^1.1.3"



[tool.poetry.group.dev.dependencies]
mypy = "^1.4.0"
types-pillow = "^10.1.0.2"
ruff = "^0.9.7"
pytest = "^8.3.3"


[[tool.poetry.source]]
name = "torch_cu118"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poetry.scripts]
export_log = "src.utilities.export_tb_log:run"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
# エラー時のメッセージを詳細表示
show_error_context = true
# エラー発生箇所の行数/列数を表示
show_column_numbers = true
# import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
ignore_missing_imports = true
# 関数定義の引数/戻り値に型アノテーション必須
disallow_untyped_defs = true
# デフォルト引数に None を取る場合型アノテーションに Optional 必須
no_implicit_optional = true
# 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_return_any = true
# mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
# ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
warn_unused_ignores = true
# 冗長なキャストに警告
warn_redundant_casts = true

[tool.ruff]
exclude = [
    ".venv",
    "venv",
    "__pycache__",
    ".git",
]
line-length = 79
indent-width = 4

[tool.ruff.lint]
select = [
    "C",
    "E",
    "F",
    "ARG",
    "I",
    "W",
]
ignore = [

]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
